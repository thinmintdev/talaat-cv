{
  "title": "TailwindCSS Architecture: Beyond Utility Classes",
  "publishedAt": "2025-08-08T00:00:00.000Z",
  "summary": "From prototypes to production systems—how I structure Tailwind projects without turning them into class soup.",
  "tags": [
    "TailwindCSS",
    "CSS Architecture",
    "Design Systems"
  ],
  "draft": false,
  "featured": false,
  "body": {
    "raw": "\nTailwind is a great low-level tool. Architecture makes it a great system.\n\n## My rules of thumb\n\n### 1) Co-locate intent with components\n- Create lightweight wrappers: `Button`, `Card`, `Badge`\n- Use `@apply` sparingly—prefer composition\n\n### 2) Design tokens > ad-hoc colors\n- Define palette, radii, spacing once\n- Expose via `theme.extend`\n\n### 3) Variants with class-variance-authority\n- Encode state (size, intent, layout) without props explosion\n\n```ts\nimport { cva } from 'class-variance-authority'\n\nexport const button = cva(\n  'inline-flex items-center justify-center rounded-md font-medium transition-colors',\n  {\n    variants: {\n      intent: {\n        primary: 'bg-blue-600 text-white hover:bg-blue-700',\n        ghost: 'bg-transparent hover:bg-gray-100',\n      },\n      size: {\n        sm: 'h-8 px-3 text-sm',\n        md: 'h-10 px-4',\n        lg: 'h-12 px-6 text-lg',\n      },\n    },\n    defaultVariants: { intent: 'primary', size: 'md' },\n  }\n)\n```\n\n### 4) The 80/20\n- 80% utilities, 20% components\n- No more than ~10 custom CSS files in most apps\n",
    "code": "var Component=(()=>{var u=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var y=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),f=(t,e)=>{for(var i in e)o(t,i,{get:e[i],enumerable:!0})},s=(t,e,i,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of m(e))!x.call(t,r)&&r!==i&&o(t,r,{get:()=>e[r],enumerable:!(l=p(e,r))||l.enumerable});return t};var w=(t,e,i)=>(i=t!=null?u(g(t)):{},s(e||!t||!t.__esModule?o(i,\"default\",{value:t,enumerable:!0}):i,t)),C=t=>s(o({},\"__esModule\",{value:!0}),t);var a=y((j,c)=>{c.exports=_jsx_runtime});var v={};f(v,{default:()=>d,frontmatter:()=>b});var n=w(a()),b={title:\"TailwindCSS Architecture: Beyond Utility Classes\",publishedAt:\"2025-08-08\",summary:\"From prototypes to production systems\\u2014how I structure Tailwind projects without turning them into class soup.\",tags:[\"TailwindCSS\",\"CSS Architecture\",\"Design Systems\"],featured:!1};function h(t){let e={code:\"code\",h2:\"h2\",h3:\"h3\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"Tailwind is a great low-level tool. Architecture makes it a great system.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"My rules of thumb\"}),`\n`,(0,n.jsx)(e.h3,{children:\"1) Co-locate intent with components\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Create lightweight wrappers: \",(0,n.jsx)(e.code,{children:\"Button\"}),\", \",(0,n.jsx)(e.code,{children:\"Card\"}),\", \",(0,n.jsx)(e.code,{children:\"Badge\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"@apply\"}),\" sparingly\\u2014prefer composition\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"2) Design tokens > ad-hoc colors\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Define palette, radii, spacing once\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"Expose via \",(0,n.jsx)(e.code,{children:\"theme.extend\"})]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"3) Variants with class-variance-authority\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Encode state (size, intent, layout) without props explosion\"}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-ts\",children:`import { cva } from 'class-variance-authority'\n\nexport const button = cva(\n  'inline-flex items-center justify-center rounded-md font-medium transition-colors',\n  {\n    variants: {\n      intent: {\n        primary: 'bg-blue-600 text-white hover:bg-blue-700',\n        ghost: 'bg-transparent hover:bg-gray-100',\n      },\n      size: {\n        sm: 'h-8 px-3 text-sm',\n        md: 'h-10 px-4',\n        lg: 'h-12 px-6 text-lg',\n      },\n    },\n    defaultVariants: { intent: 'primary', size: 'md' },\n  }\n)\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"4) The 80/20\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"80% utilities, 20% components\"}),`\n`,(0,n.jsx)(e.li,{children:\"No more than ~10 custom CSS files in most apps\"}),`\n`]})]})}function d(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(h,{...t})}):h(t)}return C(v);})();\n;return Component;"
  },
  "_id": "blog/tailwindcss-architecture-beyond-utility-classes.mdx",
  "_raw": {
    "sourceFilePath": "blog/tailwindcss-architecture-beyond-utility-classes.mdx",
    "sourceFileName": "tailwindcss-architecture-beyond-utility-classes.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/tailwindcss-architecture-beyond-utility-classes"
  },
  "type": "Post",
  "readingTime": {
    "text": "1 min read",
    "minutes": 0.71,
    "time": 42600,
    "words": 142
  },
  "slug": "tailwindcss-architecture-beyond-utility-classes",
  "path": "blog/tailwindcss-architecture-beyond-utility-classes",
  "filePath": "blog/tailwindcss-architecture-beyond-utility-classes.mdx"
}